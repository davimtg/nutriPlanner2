# Especifica√ß√£o T√©cnica e de UX - NutriPlanner

## 1. Vis√£o Geral e Objetivo do Site

### 1.1. Nome e Prop√≥sito Principal
- **Nome:** NutriPlanner
- **Prop√≥sito:** Um aplicativo web completo para planejamento de dieta personalizada, que permite aos usu√°rios gerenciar ingredientes e receitas, planejar refei√ß√µes di√°rias, acompanhar metas nutricionais, gerar listas de compras autom√°ticas e receber sugest√µes inteligentes baseadas em Intelig√™ncia Artificial.

### 1.2. P√∫blico-alvo
- Indiv√≠duos interessados em sa√∫de e bem-estar, que buscam organizar sua alimenta√ß√£o para atingir objetivos espec√≠ficos (perda de peso, ganho de massa, manuten√ß√£o).
- Pessoas com restri√ß√µes alimentares ou que precisam de um controle nutricional mais rigoroso.
- Entusiastas da culin√°ria que desejam organizar suas receitas e planejar seu uso.
- Nutricionistas ou profissionais de sa√∫de que podem usar a ferramenta para gerenciar planos de seus clientes.

### 1.3. Estilo e Tom Geral
- **Estilo:** Moderno, limpo, profissional e intuitivo. A interface √© organizada, utilizando layouts baseados em cards e grades para apresentar informa√ß√µes de forma clara e acess√≠vel.
- **Tom:** Encorajador, informativo e pr√°tico. A linguagem √© direta e positiva, com o objetivo de capacitar o usu√°rio a tomar controle de sua nutri√ß√£o (ex: "Planeje sua dieta, viva melhor!").

---

## 2. Estrutura e Arquitetura de P√°ginas

A aplica√ß√£o √© uma Single Page Application (SPA) com navega√ß√£o gerenciada por `react-router-dom`. A estrutura geral de cada p√°gina consiste em:
1.  **Navbar (Barra de Navega√ß√£o):** Fixa no topo da tela.
2.  **Conte√∫do Principal (`<main>`):** Onde o conte√∫do da p√°gina espec√≠fica √© renderizado.
3.  **Footer (Rodap√©):** Na parte inferior da p√°gina.

### 2.1. Lista de P√°ginas Existentes

-   **`/` (Dashboard):** P√°gina inicial. Exibe um resumo do dia atual, incluindo consumo de nutrientes, refei√ß√µes planejadas e atalhos para outras se√ß√µes.
-   **`/planner` (Planejador):** Ferramenta principal para planejar refei√ß√µes. Apresenta uma vis√£o semanal e di√°ria.
-   **`/recipes` (Receitas):** Biblioteca de todas as receitas cadastradas pelo usu√°rio.
-   **`/recipe/:id` (Detalhe da Receita):** Exibe informa√ß√µes completas de uma receita espec√≠fica.
-   **`/smart-recipe` (Sugest√µes IA):** Interface para gerar receitas ou planos de dieta completos usando a API Gemini.
-   **`/calculators` (Calculadoras):** Ferramentas para calcular necessidades nutricionais (BMR, TDEE, Macros).
-   **`/manage-data` (Gerenciar Dados):** Painel para CRUD (Criar, Ler, Atualizar, Deletar) de ingredientes, receitas, setores e convers√µes de unidades. Tamb√©m inclui funcionalidades de importa√ß√£o/exporta√ß√£o.
-   **`/shopping-list` (Lista de Compras):** Gera uma lista de compras com base no plano de refei√ß√µes para um per√≠odo selecionado.
-   **`/shopping-list-sheet` (Planilha de Compras):** Vis√£o detalhada da lista de compras, permitindo c√°lculos de custos.
-   **`/diet-history` (Hist√≥rico):** Visualiza√ß√£o de planos de dieta salvos anteriormente, com op√ß√µes para restaurar, exportar ou excluir.
-   **`/plan-settings` (Config. Plano):** P√°gina para definir metas nutricionais globais e importar/exportar o plano de dieta completo.

### 2.2. Ordem dos Elementos por P√°gina
-   **Navbar:**
    -   Logo "ü•ó NutriPlanner" √† esquerda.
    -   Lista de links de navega√ß√£o no centro (em telas grandes).
    -   √çcone de menu "hamburger" √† direita (em telas pequenas).
-   **Conte√∫do Principal:** Varia por p√°gina, mas geralmente cont√©m um cabe√ßalho com o t√≠tulo da p√°gina, seguido por se√ß√µes de conte√∫do, ferramentas e listas.
-   **Footer:** Cont√©m texto de copyright e um slogan.

### 2.3. Navega√ß√£o
-   A navega√ß√£o principal √© feita atrav√©s da Navbar.
-   A navega√ß√£o secund√°ria ocorre por meio de bot√µes e links dentro das p√°ginas (ex: clicar em uma receita na biblioteca leva para a p√°gina de detalhes da receita).
-   O logo na Navbar sempre leva para o Dashboard (`/`).
-   O menu "hamburger" em telas m√≥veis revela uma lista vertical com os mesmos links da navega√ß√£o principal.

---

## 3. Layout e UI (Interface do Usu√°rio)

### 3.1. Estrutura de Colunas e Grades
-   O layout principal √© centralizado com uma largura m√°xima (`container mx-auto`).
-   O conte√∫do das p√°ginas frequentemente utiliza `grid` do Tailwind CSS para criar layouts responsivos. Por exemplo, o Dashboard usa uma grade para "A√ß√µes R√°pidas" (`grid-cols-2 sm:grid-cols-3 lg:grid-cols-4`), e a biblioteca de receitas alterna entre uma grade (mosaico) e um layout de lista.

### 3.2. Tamanhos e Propor√ß√µes
-   O espa√ßamento √© generoso, usando as unidades de espa√ßamento do Tailwind (ex: `space-y-8`, `p-6`, `gap-4`).
-   Cards t√™m cantos arredondados (`rounded-xl` ou `rounded-lg`) e sombras (`shadow-lg`, `shadow-md`) para criar profundidade.

### 3.3. Paleta de Cores
-   **Prim√°ria (A√ß√µes, Destaques):** Verde Esmeralda
    -   `emerald-600`: `#059669` (principal)
    -   `emerald-700`: `#047857` (hover)
    -   `emerald-500`: `#10B981` (an√©is de foco, gr√°ficos)
    -   `emerald-100`: `#D1FAE5` (fundos de destaque leves)
    -   `emerald-50`: `#ECFDF5` (fundos de hover leves)
-   **Texto e Fundo:** Cinza Ard√≥sia (Slate)
    -   `slate-800`: `#1E293B` (texto principal)
    -   `slate-700`: `#334155` (t√≠tulos de se√ß√£o)
    -   `slate-600`: `#475569` (texto secund√°rio)
    -   `slate-500`: `#64748B` (texto de apoio, placeholders)
    -   `slate-200`: `#E2E8F0` (bordas, fundos de bot√£o secund√°rio)
    -   `slate-50`: `#F8FAFC` (fundo principal do corpo)
-   **Perigo (Exclus√£o):** Vermelho
    -   `red-600`: `#DC2626`
    -   `red-700`: `#B91C1C`
-   **Cores Neutras:**
    -   `white`: `#FFFFFF` (fundo de cards e modais)
-   **Cores de Gr√°fico/Status:**
    -   `blue-500`: `#3B82F6` (Prote√≠na)
    -   `orange-500`: `#F97316` (Carboidrato)
    -   `indigo-600`: `#4F46E5` (Colesterol)
    -   `purple-600`: `#9333EA` (Fibra)

### 3.4. Tipografia
-   **Fonte:** Padr√£o `sans-serif` do sistema (definido pelo Tailwind CSS).
-   **Tamanhos e Pesos:**
    -   T√≠tulos de p√°gina (`<h1>`): `text-4xl` (36px), `font-bold`.
    -   T√≠tulos de se√ß√£o (`<h2>`): `text-2xl` ou `text-3xl`, `font-semibold`.
    -   Subt√≠tulos (`<h3>`): `text-xl`, `font-semibold`.
    -   Corpo de texto: `text-base` (16px) ou `text-sm` (14px).
    -   Bot√µes: `text-sm` (sm), `text-base` (md), `text-lg` (lg), `font-medium`.

### 3.5. √çcones, Imagens e Ilustra√ß√µes
-   **√çcones:** Utiliza um conjunto consistente de √≠cones de linha (estilo Feather Icons), definidos em `components/Icon.tsx`. S√£o SVGs com `stroke="currentColor"` e `strokeWidth="2"`. S√£o usados para refor√ßar a fun√ß√£o de bot√µes e links de navega√ß√£o.
-   **Imagens:** Usadas para ingredientes e receitas. O sistema exibe imagens fornecidas pelo usu√°rio (via URL) e possui um fallback para `picsum.photos` ou `unsplash.com`.
-   **Ilustra√ß√µes:** N√£o h√° ilustra√ß√µes customizadas, mas √≠cones maiores s√£o usados em estados vazios para preencher o espa√ßo (ex: `IconBook` na biblioteca de receitas vazia).

### 3.6. Bot√µes
-   **Componente:** `components/Button.tsx`.
-   **Variantes:**
    -   `primary`: Fundo `emerald-600`, texto branco, hover com `bg-emerald-700`.
    -   `secondary`: Fundo `slate-200`, texto `slate-800`, hover com `bg-slate-300`.
    -   `danger`: Fundo `red-600`, texto branco, hover com `bg-red-700`.
    -   `ghost`: Fundo transparente, borda `slate-300`, texto `slate-700`, hover com `bg-slate-100`.
-   **Tamanhos:**
    -   `sm`: `px-3 py-1.5 text-sm`.
    -   `md`: `px-4 py-2 text-base`.
    -   `lg`: `px-6 py-3 text-lg`.
-   **Estado de Foco:** Anel de foco vis√≠vel (`focus:ring-2 focus:ring-offset-2`).
-   **Estado Desabilitado:** Opacidade 70% (`disabled:opacity-70`).
-   **Formato:** Cantos arredondados (`rounded-lg`).

---

## 4. UX (Experi√™ncia do Usu√°rio)

### 4.1. Fluxo de Navega√ß√£o T√≠pico
1.  **Primeira Visita:** O usu√°rio chega ao Dashboard, v√™ o resumo do dia vazio e √© incentivado a planejar refei√ß√µes ou adicionar dados.
2.  **Configura√ß√£o Inicial:** O usu√°rio vai para "Gerenciar Dados" para adicionar seus ingredientes e receitas manualmente ou via importa√ß√£o de CSV.
3.  **Planejamento:** No "Planejador", o usu√°rio seleciona um dia, clica em "Adicionar" em uma refei√ß√£o, um modal aparece para buscar e adicionar um ingrediente ou receita.
4.  **Acompanhamento:** No Dashboard, o usu√°rio visualiza o progresso de suas metas nutricionais com base no que foi planejado.
5.  **Gera√ß√£o de Lista:** Ao final da semana, o usu√°rio vai para a "Lista de Compras", define o per√≠odo e gera a lista de itens necess√°rios.
6.  **Uso de IA:** Se estiver sem ideias, o usu√°rio vai para "Sugest√µes IA", seleciona ingredientes e pede sugest√µes de receitas, ou preenche seus objetivos para receber um plano de dieta completo.

### 4.2. Elementos Interativos e Anima√ß√µes
-   **Modais:** Usados para formul√°rios (adicionar/editar item) e confirma√ß√µes. O modal aparece com um fundo escurecido e um leve efeito de "zoom in" (`animate-modalShow`). Fecha ao clicar no 'X', no fundo, ou pressionando 'Escape'.
-   **Toasts/Notifica√ß√µes:** Aparecem no canto inferior direito para fornecer feedback sobre a√ß√µes (salvo, erro, etc.). T√™m um efeito "slide in from bottom" (`animate-toastIn`) e desaparecem ap√≥s 5 segundos.
-   **Hover:** Bot√µes, links e cards mudam de cor ou aumentam a sombra ao passar o mouse (`hover:bg-emerald-700`, `hover:shadow-xl`), indicando interatividade.
-   **Toggles:** Switches animados para ligar/desligar op√ß√µes, como "Mostrar Fotos".
-   **Gr√°ficos:** Os gr√°ficos de rosca no Dashboard s√£o animados, preenchendo a circunfer√™ncia de forma suave (`transition-all duration-500`).

### 4.3. Feedback Visual
-   **Bot√£o Clicado:** O bot√£o mant√©m seu estado de hover durante o clique.
-   **Link Ativo:** O link de navega√ß√£o da p√°gina atual na Navbar tem um fundo `emerald-600` e texto branco para indicar a localiza√ß√£o do usu√°rio.
-   **Carregamento (Loading):** Durante opera√ß√µes ass√≠ncronas (como chamar a IA), bot√µes mudam o texto para "Buscando..." e um √≠cone de spinner animado aparece.

### 4.4. Mensagens
-   **Erro:** Toasts vermelhos para falhas de API, valida√ß√£o de formul√°rio ou erros de importa√ß√£o.
-   **Sucesso:** Toasts verdes para confirma√ß√µes de salvamento, importa√ß√£o bem-sucedida, etc.
-   **Aviso:** Toasts amarelos para informa√ß√µes importantes que n√£o s√£o erros (ex: "importa√ß√£o com X erros").
-   **Confirma√ß√£o:** Modais s√£o usados para a√ß√µes destrutivas (ex: "Tem certeza que deseja excluir?").

---

## 5. Funcionalidades e Ferramentas

### 5.1. Ferramentas Existentes

-   **Gerenciador de Ingredientes:**
    -   **Entrada:** Formul√°rio com campos: Nome, URL da Imagem, Unidade, Setor, Marca, Pre√ßo, Local de Compra e todos os campos de `NutrientInfo`.
    -   **Sa√≠da:** Um novo ingrediente √© adicionado √† lista global.
    -   **Funcionalidade:** CRUD completo, importa√ß√£o/exporta√ß√£o via CSV, sugest√£o de setor baseada em palavras-chave do nome.

-   **Gerenciador de Receitas:**
    -   **Entrada:** Formul√°rio com: Nome, Instru√ß√µes, Por√ß√µes, Tempo de Preparo, Dificuldade, URL da Imagem e uma lista de ingredientes (selecionados do banco de dados de ingredientes) com suas respectivas quantidades.
    -   **Sa√≠da:** Uma nova receita √© salva, com seus nutrientes totais e por por√ß√£o calculados automaticamente.
    -   **Funcionalidade:** CRUD completo, importa√ß√£o/exporta√ß√£o via CSV.

-   **Planejador de Refei√ß√µes (`PlannerPage`):**
    -   **Entrada:** A√ß√£o do usu√°rio para adicionar item a uma refei√ß√£o em um dia espec√≠fico. Um modal permite buscar e selecionar um ingrediente ou receita e definir a quantidade.
    -   **Sa√≠da:** O item √© adicionado ao plano di√°rio. As barras de progresso de nutrientes do dia s√£o atualizadas em tempo real.
    -   **Funcionalidade:** Visualiza√ß√£o semanal, CRUD de itens em cada refei√ß√£o, c√°lculo autom√°tico de nutrientes por refei√ß√£o e por dia.

-   **Gerador de Lista de Compras (`ShoppingListPage`):**
    -   **Entrada:** Um intervalo de datas selecionado pelo usu√°rio.
    -   **Sa√≠da:** Uma lista de compras consolidada, agrupada por setor. Itens de receitas s√£o decompostos em seus ingredientes. Unidades s√£o padronizadas (ex: 'g' para peso).
    -   **Funcionalidade:** Gera√ß√£o autom√°tica, adi√ß√£o de itens manuais, marcar itens como comprados, exporta√ß√£o para texto, gerenciamento de modelos de lista.

-   **Sugest√µes com IA (`SmartRecipePage`):**
    -   **Entrada (Receita):** At√© 3 ingredientes selecionados, tipo de refei√ß√£o, prefer√™ncias textuais.
    -   **Entrada (Plano de Dieta):** Dura√ß√£o, metas de calorias/macros, n√∫mero de refei√ß√µes, ingredientes a priorizar, prefer√™ncias textuais.
    -   **Sa√≠da:** Um array JSON com sugest√µes de receitas ou um plano de dieta completo para v√°rios dias. A interface renderiza essa sa√≠da de forma amig√°vel.
    -   **Funcionalidade:** Integra√ß√£o com a API Gemini do Google (`@google/genai`). O prompt √© constru√≠do dinamicamente com base nas entradas do usu√°rio e solicita uma resposta em formato JSON estrito. Permite salvar as receitas sugeridas ou o plano de dieta diretamente no sistema do usu√°rio.

-   **Calculadoras Nutricionais (`NutritionalCalculatorsPage`):**
    -   **Entrada:** Dados do usu√°rio (idade, peso, altura, sexo, % de gordura) e configura√ß√µes (f√≥rmula, n√≠vel de atividade, objetivo).
    -   **Sa√≠da:** Valores calculados de BMR, TDEE e metas de macronutrientes.
    -   **Funcionalidade:** Implementa as f√≥rmulas Mifflin-St Jeor e Katch-McArdle. Permite que o usu√°rio aplique os resultados como suas metas nutricionais globais no app.

### 5.2. Integra√ß√µes com APIs
-   **@google/genai:** Usada na `SmartRecipePage` para se comunicar com os modelos Gemini da Google. A chave de API √© obtida da vari√°vel de ambiente `process.env.API_KEY`.
-   **papaparse:** Usada para converter dados de e para o formato CSV nas funcionalidades de importa√ß√£o/exporta√ß√£o.

### 5.3. Regras de Funcionamento
-   **C√°lculo de Nutrientes:** Os nutrientes s√£o sempre baseados em 100g/100ml se a unidade for de peso/volume, ou por unidade se for 'unidade'. Os c√°lculos para receitas e planos di√°rios agregam os valores com base nas quantidades e por√ß√µes.
-   **Persist√™ncia de Dados:** Todos os dados (ingredientes, receitas, planos) s√£o salvos no `localStorage` do navegador, tornando o aplicativo funcional offline ap√≥s o primeiro carregamento. O hook `useData` gerencia toda a l√≥gica de estado e persist√™ncia.

---

## 6. Conte√∫do Textual e Multim√≠dia

### 6.1. Todos os Textos
-   **T√≠tulos:** "NutriPlanner", "Planejador Semanal", "Biblioteca de Receitas", "Configura√ß√µes e Gerenciamento do Plano", etc.
-   **Slogans/Descri√ß√µes:** "Seu painel de controle para uma alimenta√ß√£o saud√°vel e organizada.", "Planeje sua dieta, viva melhor!".
-   **Labels de Bot√µes:** "Adicionar Ingrediente", "Salvar Altera√ß√µes", "Gerar Plano de Dieta", "Restaurar Plano", "Exportar para CSV".
-   **Labels de Formul√°rio:** "Nome do Ingrediente", "Unidade de Medida", "Modo de Preparo", "Calorias Di√°rias Alvo".
-   **Idioma:** Portugu√™s do Brasil (pt-BR).

### 6.2. Estilo de Escrita e Tom de Voz
-   Claro, conciso e orientado para a a√ß√£o.
-   Usa termos t√©cnicos de nutri√ß√£o (Prote√≠na, Carboidrato, TDEE), mas a interface busca torn√°-los compreens√≠veis atrav√©s de unidades e contexto.

### 6.3. M√≠dias Usadas
-   Imagens de receitas e ingredientes (URLs externas).
-   Gr√°ficos SVG gerados dinamicamente para visualiza√ß√£o de dados (donut charts, bar charts).

---

## 7. Comportamento Responsivo e Acessibilidade

### 7.1. Comportamento Responsivo
-   **Mobile (Telas pequenas):**
    -   Navbar colapsa para um √≠cone "hamburger".
    -   Grades de 2, 3 ou 4 colunas se tornam de 1 ou 2 colunas.
    -   Texto e espa√ßamentos s√£o ligeiramente reduzidos.
    -   Flex-containers com `flex-row` em desktop passam para `flex-col` em mobile.
-   **Tablet (Telas m√©dias, `md:`):** Um estado intermedi√°rio, onde a Navbar pode se expandir e as grades podem ter mais colunas.
-   **Desktop (Telas grandes, `lg:`):** Layout completo com Navbar expandida e grades com o n√∫mero m√°ximo de colunas.

### 7.2. Acessibilidade
-   Uso de HTML sem√¢ntico (`<nav>`, `<main>`, `<footer>`, `<button>`).
-   Atributos ARIA s√£o aplicados:
    -   `role="dialog"`, `aria-modal="true"` em modais.
    -   `aria-label` em bot√µes com apenas √≠cones.
    -   `aria-current="page"` em links de navega√ß√£o ativos.
    -   `aria-expanded` em bot√µes que controlam co
(Content truncated due to size limit. Use page ranges or line ranges to read remaining content)